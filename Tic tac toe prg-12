def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_win(board, player):
    # Check rows, columns, and diagonals
    for i in range(3):
        if all(s == player for s in board[i]):  # row
            return True
        if all(board[j][i] == player for j in range(3)):  # column
            return True
    if all(board[i][i] == player for i in range(3)):  # diagonal
        return True
    if all(board[i][2 - i] == player for i in range(3)):  # anti-diagonal
        return True
    return False

def check_draw(board):
    return all(cell != ' ' for row in board for cell in row)

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'

    while True:
        print_board(board)
        print(f"Player {current_player}'s turn.")
        
        # Input validation loop
        while True:
            try:
                row = int(input("Enter row (0, 1, 2): "))
                col = int(input("Enter column (0, 1, 2): "))
                if row in [0,1,2] and col in [0,1,2]:
                    if board[row][col] == ' ':
                        break
                    else:
                        print("Cell already occupied. Try again.")
                else:
                    print("Invalid input. Row and column must be 0, 1, or 2.")
            except ValueError:
                print("Invalid input. Please enter numbers 0, 1, or 2.")

        board[row][col] = current_player

        if check_win(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        if check_draw(board):
            print_board(board)
            print("It's a draw!")
            break

        # Switch player
        current_player = 'O' if current_player == 'X' else 'X'

if __name__ == "__main__":
    tic_tac_toe()
